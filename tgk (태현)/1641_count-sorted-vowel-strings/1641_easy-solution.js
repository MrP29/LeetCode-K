/**
 * @param {number} n
 * @return {number}
 */
var countVowelStrings = function (n) {
    /**
     * 이 문제는 수학/패턴 문제처럼 취급하시면 편합니다.
     *
     * 첫 n = 1일때 정답은
     * a, e, i, o, u로 (1 + 1 + 1 + 1 + 1) 5입니다
     *
     * n = 2일때
     * 옛 정답 a, e, i, o, u앞에 a를 붙이고 (5)
     * e, i, o, u앞에 e를 붙이고 (4)
     * i, o, u앞에 i를 붙이고 (3)
     * o, u앞에 o를 붙이고 (2)
     * u앞에 u를 붙여 (1)
     * "aa","ae","ai","ao","au","ee","ei","eo","eu","ii","io","iu","oo","ou","uu"
     * 가 나와 정답은 (5 + 4 + 3 + 2 + 1) 15가 됩니다
     *
     * n = 3일때
     * 옛 정답 aa - uu 앞에 a를 붙이고 (15)
     * ee - uu앞에 e를 붙이고 (10)
     * ii - uu앞에 i를 붙이고 (6)
     * oo - uu앞에 o를 붙이고 (3)
     * uu앞에 u를 붙여 (1)
     * 정답은 (15 + 10 + 6 + 3 + 1) 35가 됩니다
     *
     * 혹시 패턴을 찾으셨나요?
     *
     * 1   1   1   1   1       5
     * 5   4   3   2   1       15
     * 15  10  6   3   1       35
     * 35  20  10  4   1       70
     * 70  35  15  5   1       126
     * 126 56  21  6   1       210
     * ...
     *
     * 1   1   1   1   1   부터 봅시다
     *
     * 다음 줄을 계산할 때
     * 첫 항은 (1 + 1 + 1 + 1 + 1)이 되겠고
     * 두번째 항은 (1 + 1 + 1 + 1)이 되고
     * 마지막 항은 (1)이 되겠습니다
     * 그래서 다음 줄은 (5 + 4 + 3 + 2 + 1)이 되겠군요
     *
     * 5   4   3   2   1
     *
     * 다음 줄을 계산합시다
     * 첫 항은 (5 + 4 + 3 + 2 + 1)이 되겠고
     * 둘째 항은 (4 + 3 + 2 + 1)이 되겠고
     * 셋째 항은 (3 + 2 + 1)이 되겠고
     * 넷째 항은 (2 + 1)이 되겠고
     * 마지막 항은 (1)이 되겠습니다
     * 그래서 다음 줄은 (15 + 10 + 6 + 3 + 1)
     *
     * 15  10  6   3   1
     *
     * 다음 줄을 마지막으로 계산합시다
     * 첫 항은 (15 + 10 + 6 + 3 + 1)이 되겠고
     * 둘째 항은 (10 + 6 + 3 + 1)이 되겠고
     * 셋째 항은 (6 + 3 + 1)이 되겠고
     * 넷째 항은 (3 + 1)이 되겠고
     * 마지막 항은 (1)이 되겠습니다
     * 그래서 다음 줄은 (35 + 20 + 10 + 4 + 1)이 되겠습니다
     *
     * 35  20  10  4   1
     *
     * 이 이상 안가도 될 것 같습니다
     */
    let a = 1,
        b = 1,
        c = 1,
        d = 1,
        e = 1,
        cnt = 1;

    while (cnt++ < n) {
        a = a + b + c + d + e;
        b = b + c + d + e;
        c = c + d + e;
        d = d + e;
        // e = e
    }

    return a + b + c + d + e;
};
